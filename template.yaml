AWSTemplateFormatVersion: "2010-09-09"
Description: Role Vending Machine

Parameters:
  GitHubRepo:
    Type: String
    Description: |
      The Github repo that can deploy RVM configuration, e.g. hyperscale-consulting/rvm-configuration
  GitHubOidcProviderArn:
    Type: String
    Description: OIDC provider ARN for CI/CD OIDC provider
  RvmPiplineBucketAccessLogBucket:
    Type: String
    Description: Access log bucket for the RVM pipeline bucket

Resources:
  RvmPipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref RvmPiplineBucketAccessLogBucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"
            Function: !Ref RvmLambdaFunction
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .zip

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Static role name so it can be easily referred to in the RVM workflow role policy
    Properties:
      RoleName: RvmMainRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: RVMLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !Sub "arn:${AWS::Partition}:iam::*:role/RvmWorkflowRole"

  RvmLambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: No need for VPC access
    Properties:
      Runtime: python3.12
      Handler: rvm.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 900
      MemorySize: 512
      ReservedConcurrentExecutions: 1
      Code: ./rvm
      Architectures:
        - arm64
      LoggingConfig:
        LogGroup: !Ref LambdaLogGroup
        LogFormat: JSON
        ApplicationLogLevel: INFO
        SystemLogLevel: INFO

  RvmPipelineBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RvmPipelineBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: EnforceSecureTransit
            Effect: Deny
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Action: s3:*
            Resource: !Sub "${RvmPipelineBucket.Arn}/*"
            Principal: "*"
          - Sid: AllowLambdaRead
            Effect: Allow
            Principal:
              AWS: !GetAtt LambdaExecutionRole.Arn
            Action: s3:GetObject
            Resource: !Sub "${RvmPipelineBucket.Arn}/rvm-configuration.zip"

  # Lambda Permission for S3 to invoke Lambda
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref RvmLambdaFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub "${RvmPipelineBucket}/rvm-configuration.zip"

  RvmCiCdRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GitHubOidcProviderArn
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
                "token.actions.githubusercontent.com:sub": !Sub "repo:${GitHubRepo}"
      Policies:
        - PolicyName: RvmCiCdPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub "${RvmPipelineBucket}/rvm-configuration.zip"

  LambdaLogGroup:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::Logs::LogGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W84
            reason: No sensitive data logged
    Properties:
      LogGroupName: "/aws/lambda/rvm"
      RetentionInDays: 7

Outputs:
  RvmPipelineBucket:
    Description: Name of the S3 bucket for RVM pipeline packages
    Value: !Ref RvmPipelineBucket
  RvmCiCdRole:
    Description: Role ARN of the CI/CD role
    Value: !GetAtt RvmCiCdRole.Arn
